open import "std/std.bfml"

let main = $

$build {
  queens: array(_) { col; i:index; };
  f_col: array(_) { flag; i:index; };
  f_sum: array(_) { flag; i:index; };
  f_diff: array(_) { flag; i:index; };
  n;
  row_rest;
  rowi;
}


*gen_geti n '\n'

*gen_repeat_restore n [
  + row_rest
  + queens:(0)col
]
- queens:(0)col

! row_rest [
  *gen_reset_index queens@i
  *gen_repeat_restore rowi [ > queens@i ]

  *gen_reset_index f_col@i
  *gen_reset_index f_sum@i
  *gen_reset_index f_diff@i

  + queens@i:col
  ? queens@i:col
    [ // クイーンが盤上にある
      - queens@i:col
      *gen_repeat_restore n [ > f_diff@i ]
      *gen_repeat_restore queens@i:col [
        > f_col@i
        > f_sum@i
        < f_diff@i
      ]
      *gen_repeat_restore rowi [
        > f_sum@i
        > f_diff@i
      ]

      $alloc { dup: cell; }
      ? f_col@i:flag [ + dup ] []
      ? f_sum@i:flag [ + dup ] []
      ? f_diff@i:flag [ + dup ] []
      ? dup
        [ // 重複あり
          - queens@i:col
        ]
        [ // 重複なし
          + f_col@i:flag
          + f_sum@i:flag
          + f_diff@i:flag

          + rowi
          - row_rest

          - n
          *gen_repeat_restore n [ + queens@i:(1)col ]
          + n
        ]
    ]
    [ // クイーンが左端から出た
      ? rowi
        [ // バックトラック
          - rowi
          + row_rest
          *gen_repeat_restore n [ > f_diff@i ]
          *gen_repeat_restore queens@i:(-1)col [
            > f_col@i
            > f_sum@i
            < f_diff@i
          ]
          *gen_repeat_restore rowi [
            > f_sum@i
            > f_diff@i
          ]
          - f_col@i:flag
          - f_sum@i:flag
          - f_diff@i:flag
          - queens@i:(-1)col
        ]
        [ // 詰み
          *gen_del row_rest
        ]
    ]
]


// 出力
? rowi
  [ // 通常
    *gen_reset_index queens@i
    $alloc { i: cell; j: cell; }
    *gen_repeat_restore n [ + i ]
    ! i [
      - i
      *gen_repeat_restore n [ + j ]
      ! j [
        - j
        *gen_repeat_restore j [ - queens@i:col ]
        ? queens@i:col
          [ *gen_puts ". " ]
          [ *gen_puts "Q " ]
        *gen_repeat_restore j [ + queens@i:col ]
      ]
      > queens@i
      *gen_puts "\n"
    ]
  ]
  [ *gen_puts "NO ANSWER\n" ]
